from itertools import groupby
import numpy as np
from matplotlib import pyplot as plt

raw_data1 = [
    ( 55, 1.97, 2.55 ),
    ( 55, 1.23, 1.63 ),
    ( 55, 1.10, 1.81 ),
    ( 55, 1.69, 1.66 ),
    ( 55, 1.64, 1.90 ),
    ( 55, 1.89, 2.15 ),
    ( 55, 2.20, 2.60 ),
    ( 55, 1.23, 1.58 ),
    ( 55, 1.38, 1.69 ),
    ( 55, 1.38, 1.79 ),
    ( 55, 1.17, 1.45 ),
    ( 55, 1.87, 2.24 ),
    ( 35, 1.04, 1.54 ),
    ( 35, 1.06, 1.70 ),
    ( 35, 1.00, 1.69 ),
    ( 35, 1.03, 1.37 ),
    ( 35, 1.69, 2.64 ),
    ( 35, 1.28, 1.78 ),
    ( 35, 1.38, 1.95 ),
    ( 35, 0.95, 1.19 ),
    ( 35, 1.14, 1.60 ),
    ( 35, 1.01, 1.72 ),
    ( 35, 1.30, 1.83 ),
    ( 35, 1.73, 3.01 ),
    ( 44, 1.64, 2.17 ),
    ( 44, 1.96, 2.95 ),
    ( 44, 1.42, 2.46 ),
    ( 44, 1.77, 2.52 ),
    ( 44, 1.91, 2.56 ),
    ( 44, 1.75, 2.75 ),
    ( 44, 1.78, 2.42 ),
    ( 44, 1.36, 1.65 ),
    ( 44, 1.47, 1.83 ),
    ( 44, 1.57, 1.95 ),
    ( 44, 1.91, 2.71 ),
    ( 44, 1.84, 2.22 ),
    ( 65, 1.99, 2.22 ),
    ( 65, 1.06, 1.29 ),
    ( 65, 1.09, 1.52 ),
    ( 65, 2.08, 2.31 ),
    ( 65, 1.86, 2.43 ),
    ( 65, 1.70, 1.99 ),
    ( 65, 1.94, 2.63 ),
    ( 65, 1.10, 1.19 ),
    ( 65, 1.14, 1.31 ),
    ( 65, 1.22, 1.50 ),
    ( 65, 1.05, 1.41 ),
    ( 65, 1.66, 2.23 ),
    ( 31, 0.70, 0.94 ),
    ( 31, 0.48, 0.74 ),
    ( 31, 0.51, 0.65 ),
    ( 31, 0.94, 1.84 ),
    ( 31, 1.03, 2.28 ),
    ( 31, 0.56, 0.99 ),
    ( 31, 1.55, 1.82 ),
    ( 31, 0.61, 0.88 ),
    ( 31, 0.58, 0.73 ),
    ( 31, 0.59, 0.71 ),
    ( 31, 0.73, 1.14 ),
    ( 31, 0.74, 1.28 ),
    ( 40, 1.90, 2.41 ),
    ( 40, 1.69, 2.20 ),
    ( 40, 0.92, 1.80 ),
    ( 40, 2.01, 2.79 ),
    ( 40, 2.17, 2.41 ),
    ( 40, 1.54, 2.42 ),
    ( 40, 2.88, 3.76 ),
    ( 40, 1.40, 2.21 ),
    ( 40, 1.57, 2.01 ),
    ( 40, 1.60, 1.98 ),
    ( 40, 2.08, 3.10 ),
    ( 40, 1.91, 2.94 ),
    ( 50, 1.83, 2.53 ),
    ( 50, 1.41, 1.81 ),
    ( 50, 1.10, 1.75 ),
    ( 50, 2.20, 2.59 ),
    ( 50, 1.86, 2.21 ),
    ( 50, 2.29, 2.52 ),
    ( 50, 1.88, 2.37 ),
    ( 50, 1.43, 1.90 ),
    ( 50, 1.47, 1.98 ),
    ( 50, 1.95, 2.54 ),
    ( 50, 2.29, 2.98 ),
    ( 50, 2.36, 2.69 ),
    ( 60, 2.97, 3.61 ),
    ( 60, 1.05, 1.19 ),
    ( 60, 1.35, 1.89 ),
    ( 60, 1.37, 1.96 ),
    ( 60, 2.16, 2.33 ),
    ( 60, 2.21, 2.55 ),
    ( 60, 1.54, 2.02 ),
    ( 60, 2.18, 2.53 ),
    ( 60, 1.21, 1.46 ),
    ( 60, 1.17, 1.46 ),
    ( 60, 1.31, 1.71 ),
    ( 60, 0.91, 1.23 ),
    ( 60, 1.61, 2.13 ),
    ( 28, 0.89, 1.59 ),
    ( 28, 0.60, 0.93 ),
    ( 28, 0.79, 0.90 ),
    ( 28, 0.91, 1.42 ),
    ( 28, 0.92, 1.76 ),
    ( 28, 0.55, 0.71 ),
    ( 28, 0.96, 1.20 ),
    ( 28, 0.86, 1.26 ),
    ( 28, 0.70, 1.03 ),
    ( 28, 0.88, 1.29 ),
    ( 28, 0.69, 0.97 ),
    ( 28, 0.92, 1.21 ),
    ( 24, 2.29, 3.24 ),
    ( 24, 1.90, 2.71 ),
    ( 24, 1.58, 2.12 ),
    ( 24, 1.98, 3.22 ),
    ( 24, 1.90, 3.18 ),
    ( 24, 2.06, 3.18 ),
    ( 24, 1.92, 2.93 ),
    ( 24, 1.38, 2.09 ),
    ( 24, 1.65, 2.77 ),
    ( 24, 1.79, 3.08 ),
    ( 24, 1.70, 2.72 ),
    ( 24, 1.83, 2.78 ),
    ( 18, 8.82, 13.78),
    ( 18, 7.57, 12.60),
    ( 18, 6.99, 10.82),
    ( 18, 7.88, 11.81),
    ( 18, 8.86, 12.35),
    ( 18, 8.74, 13.97),
    ( 18, 7.63, 10.53),
    ( 18, 6.59, 9.83 ),
    ( 18, 6.55, 9.87 ),
    ( 18, 6.48, 9.81 ),
    ( 18, 6.14, 8.44 ),
    ( 18, 6.05, 8.61 ),
    ( 20, 5.45, 8.14 ),
    ( 20, 4.97, 7.33 ),
    ( 20, 4.69, 7.41 ),
    ( 20, 5.18, 7.98 ),
    ( 20, 5.13, 8.33 ),
    ( 20, 5.54, 8.41 ),
    ( 20, 5.31, 7.84 ),
    ( 20, 4.42, 6.67 ),
    ( 20, 5.11, 7.58 ),
    ( 20, 4.65, 7.06 ),
    ( 20, 5.68, 8.13 ),
    ( 20, 4.83, 7.29 ),
    ( 70, 1.83, 2.15 ),
    ( 70, 1.05, 1.43 ),
    ( 70, 1.13, 1.61 ),
    ( 70, 2.02, 1.78 ),
    ( 70, 2.30, 2.55 ),
    ( 70, 1.76, 1.97 ),
    ( 70, 1.68, 2.59 ),
    ( 70, 1.03, 1.21 ),
    ( 70, 1.29, 1.44 ),
    ( 70, 1.30, 1.62 ),
    ( 70, 1.04, 1.25 ),
    ( 70, 1.12, 1.94 ),
]

firstitem = lambda v: v[0]
raw_data1.sort(key=firstitem)
data1 = []
for zoom, group in groupby(raw_data1, firstitem):
    group = np.array(list(group))
    data1.append([ zoom, np.sqrt(np.mean(group[:,1]**2)), np.sqrt(np.max(group[:,2]**2)) ])

plt.figure(figsize=(6*1.2,7*1.2))

plt.subplot(2,1,1)
data1 = np.array(data1)
max_bars  = plt.bar(np.arange(len(data1))+0.1, data1[:,2], color='#a0a5a5', edgecolor='#505353', width=0.4)
mean_bars = plt.bar(np.arange(len(data1))-0.2, data1[:,1], color='#396AB1', edgecolor='#1D3555', width=0.4)
plt.legend( (max_bars[0], mean_bars[0]), ('max', 'mean'), loc='upper left' )
plt.gca().set_xticks(range(len(data1)))
plt.gca().set_xticklabels([ int(d) for d in data1[:,0] ])
plt.xlim([-1, len(data1)+1])
plt.xlabel('(a) calibrated zoom levels')
plt.ylabel('residual (pixels)')

data2 = np.array([
    [ 22, 0.47, 0.69 ],
    [ 29, 0.40, 0.67 ],
    [ 38, 0.15, 0.26 ],
    [ 42, 0.14, 0.16 ],
    [ 46, 0.16, 0.31 ],
    [ 52, 0.43, 0.53 ],
    [ 62, 0.86, 0.94 ],
])

plt.subplot(2,1,2)
max_bars  = plt.bar(np.arange(len(data2))+0.0625, data2[:,2], color='#a0a5a5', edgecolor='#505353', width=0.25)
mean_bars = plt.bar(np.arange(len(data2))-0.125, data2[:,1], color='#396AB1', edgecolor='#1D3555', width=0.25)
plt.gca().set_xticks(range(len(data2)))
plt.gca().set_xticklabels([ int(d) for d in data2[:,0] ])
plt.xlim([-1, len(data2)+1])
plt.xlabel('(b) interpolated zoom levels')
plt.ylabel('residual (pixels)')

plt.tight_layout()
plt.show()